;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{}, :name cljs-minesweeper.core, :imports nil, :requires {game cljs-minesweeper.game, cljs-minesweeper.game cljs-minesweeper.game, reagent reagent.core, reagent.core reagent.core, components cljs-minesweeper.components, cljs-minesweeper.components cljs-minesweeper.components}, :uses nil, :defs {boardsize {:name cljs-minesweeper.core/boardsize, :file "src/cljs/cljs_minesweeper/core.cljs", :line 9, :column 1, :end-line 9, :end-column 15, :meta {:file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljs/cljs_minesweeper/core.cljs", :line 9, :column 6, :end-line 9, :end-column 15}}, state {:name cljs-minesweeper.core/state, :file "src/cljs/cljs_minesweeper/core.cljs", :line 12, :column 1, :end-line 12, :end-column 15, :meta {:file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljs/cljs_minesweeper/core.cljs", :line 12, :column 10, :end-line 12, :end-column 15}}, click {:protocol-inline nil, :meta {:file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljs/cljs_minesweeper/core.cljs", :line 16, :column 7, :end-line 16, :end-column 12, :arglists (quote ([row col])), :doc "Clicking action:\n  Creates a new board where the coordinates of square have been clicked,\n  and sets application state to that new board."}, :name cljs-minesweeper.core/click, :variadic false, :file "src/cljs/cljs_minesweeper/core.cljs", :end-column 12, :method-params ([row col]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists (quote ([row col])), :doc "Clicking action:\n  Creates a new board where the coordinates of square have been clicked,\n  and sets application state to that new board."}, mark {:protocol-inline nil, :meta {:file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljs/cljs_minesweeper/core.cljs", :line 25, :column 7, :end-line 25, :end-column 11, :arglists (quote ([row col])), :doc "Marking action:\n  Creates a new board where the coordinates\n  of square have been marked, sets application state."}, :name cljs-minesweeper.core/mark, :variadic false, :file "src/cljs/cljs_minesweeper/core.cljs", :end-column 11, :method-params ([row col]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 2, :fn-var true, :arglists (quote ([row col])), :doc "Marking action:\n  Creates a new board where the coordinates\n  of square have been marked, sets application state."}, new-game {:protocol-inline nil, :meta {:file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljs/cljs_minesweeper/core.cljs", :line 34, :column 7, :end-line 34, :end-column 15, :arglists (quote ([])), :doc "New game action.\n  Generates a new board and sets application state"}, :name cljs-minesweeper.core/new-game, :variadic false, :file "src/cljs/cljs_minesweeper/core.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "New game action.\n  Generates a new board and sets application state"}, game {:protocol-inline nil, :meta {:file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljs/cljs_minesweeper/core.cljs", :line 40, :column 7, :end-line 40, :end-column 11, :arglists (quote ([])), :doc "Game boilerplate/ui\n  Decides whether the game has ended or not\n  and attached messages/click handlers based on that"}, :name cljs-minesweeper.core/game, :variadic false, :file "src/cljs/cljs_minesweeper/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Game boilerplate/ui\n  Decides whether the game has ended or not\n  and attached messages/click handlers based on that"}, testboard {:name cljs-minesweeper.core/testboard, :file "src/cljs/cljs_minesweeper/core.cljs", :line 72, :column 1, :end-line 72, :end-column 15, :meta {:file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljs/cljs_minesweeper/core.cljs", :line 72, :column 6, :end-line 72, :end-column 15}}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:squares :else :number :button :marked :width :on-click :div :mines :h1 :height :show}, :order [:else :div :h1 :button :on-click :squares :width :height :mines :show :number :marked]}, :doc nil}