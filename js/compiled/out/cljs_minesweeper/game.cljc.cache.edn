;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{}, :name cljs-minesweeper.game, :imports nil, :requires nil, :uses nil, :defs {lost? {:protocol-inline nil, :meta {:file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljc/cljs_minesweeper/game.cljc", :line 114, :column 7, :end-line 114, :end-column 12, :arglists (quote ([{:keys [squares]}])), :doc "check if the user has 'click':ed any mines"}, :name cljs-minesweeper.game/lost?, :variadic false, :file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljc/cljs_minesweeper/game.cljc", :end-column 12, :method-params ([p__22881]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 114, :end-line 114, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [squares]}])), :doc "check if the user has 'click':ed any mines"}, is-empty? {:protocol-inline nil, :meta {:file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljc/cljs_minesweeper/game.cljc", :line 8, :column 7, :end-line 8, :end-column 16, :arglists (quote ([square])), :doc "checks if a square is a zero"}, :name cljs-minesweeper.game/is-empty?, :variadic false, :file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljc/cljs_minesweeper/game.cljc", :end-column 16, :method-params ([square]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([square])), :doc "checks if a square is a zero"}, get-all-touches {:protocol-inline nil, :meta {:file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljc/cljs_minesweeper/game.cljc", :line 22, :column 7, :end-line 22, :end-column 22, :arglists (quote ([index width height])), :doc "gets the index of all the squares touching the supplied index"}, :name cljs-minesweeper.game/get-all-touches, :variadic false, :file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljc/cljs_minesweeper/game.cljc", :end-column 22, :method-params ([index width height]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 3, :fn-var true, :arglists (quote ([index width height])), :doc "gets the index of all the squares touching the supplied index"}, won? {:protocol-inline nil, :meta {:file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljc/cljs_minesweeper/game.cljc", :line 121, :column 7, :end-line 121, :end-column 11, :arglists (quote ([{:keys [squares], :as board}])), :doc "check if the user has 'click':ed all non-mines, without hitting any mines"}, :name cljs-minesweeper.game/won?, :variadic false, :file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljc/cljs_minesweeper/game.cljc", :end-column 11, :method-params ([p__22887]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 121, :end-line 121, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [squares], :as board}])), :doc "check if the user has 'click':ed all non-mines, without hitting any mines"}, mark-squares {:protocol-inline nil, :meta {:file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljc/cljs_minesweeper/game.cljc", :line 80, :column 8, :end-line 80, :end-column 20, :private true, :arglists (quote ([squares index width height]))}, :private true, :name cljs-minesweeper.game/mark-squares, :variadic false, :file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljc/cljs_minesweeper/game.cljc", :end-column 20, :method-params ([squares index width height]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 80, :end-line 80, :max-fixed-arity 4, :fn-var true, :arglists (quote ([squares index width height]))}, board {:protocol-inline nil, :meta {:file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljc/cljs_minesweeper/game.cljc", :line 144, :column 7, :end-line 144, :end-column 12, :arglists (quote ([width height mines])), :doc "generates a board for play"}, :name cljs-minesweeper.game/board, :variadic false, :file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljc/cljs_minesweeper/game.cljc", :end-column 12, :method-params ([width height mines]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 144, :end-line 144, :max-fixed-arity 3, :fn-var true, :arglists (quote ([width height mines])), :doc "generates a board for play"}, find-all-neighbors {:protocol-inline nil, :meta {:file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljc/cljs_minesweeper/game.cljc", :line 52, :column 8, :end-line 52, :end-column 26, :private true, :arglists (quote ([squares index width height])), :doc "find all touching zeros and other non-mine squares recursively"}, :private true, :name cljs-minesweeper.game/find-all-neighbors, :variadic false, :file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljc/cljs_minesweeper/game.cljc", :end-column 26, :method-params ([squares index width height]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 4, :fn-var true, :arglists (quote ([squares index width height])), :doc "find all touching zeros and other non-mine squares recursively"}, is-mine? {:protocol-inline nil, :meta {:file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljc/cljs_minesweeper/game.cljc", :line 3, :column 7, :end-line 3, :end-column 15, :arglists (quote ([square])), :doc "checks if a square is a mine"}, :name cljs-minesweeper.game/is-mine?, :variadic false, :file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljc/cljs_minesweeper/game.cljc", :end-column 15, :method-params ([square]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :end-line 3, :max-fixed-arity 1, :fn-var true, :arglists (quote ([square])), :doc "checks if a square is a mine"}, mark {:protocol-inline nil, :meta {:file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljc/cljs_minesweeper/game.cljc", :line 106, :column 7, :end-line 106, :end-column 11, :arglists (quote ([{:keys [width height squares], :as board} x y])), :doc "lets the user mark a square as suspected mine, stops from clicking on it"}, :name cljs-minesweeper.game/mark, :variadic false, :file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljc/cljs_minesweeper/game.cljc", :end-column 11, :method-params ([p__22876 x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 106, :end-line 106, :max-fixed-arity 3, :fn-var true, :arglists (quote ([{:keys [width height squares], :as board} x y])), :doc "lets the user mark a square as suspected mine, stops from clicking on it"}, mark-marked {:protocol-inline nil, :meta {:file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljc/cljs_minesweeper/game.cljc", :line 103, :column 7, :end-line 103, :end-column 18, :arglists (quote ([square]))}, :name cljs-minesweeper.game/mark-marked, :variadic false, :file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljc/cljs_minesweeper/game.cljc", :end-column 18, :method-params ([square]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 103, :end-line 103, :max-fixed-arity 1, :fn-var true, :arglists (quote ([square]))}, mark-shown {:protocol-inline nil, :meta {:file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljc/cljs_minesweeper/game.cljc", :line 76, :column 8, :end-line 76, :end-column 18, :private true, :arglists (quote ([square]))}, :private true, :name cljs-minesweeper.game/mark-shown, :variadic false, :file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljc/cljs_minesweeper/game.cljc", :end-column 18, :method-params ([square]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 1, :fn-var true, :arglists (quote ([square]))}, touches {:name cljs-minesweeper.game/touches, :file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljc/cljs_minesweeper/game.cljc", :line 13, :column 1, :end-line 13, :end-column 30, :private true, :meta {:file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljc/cljs_minesweeper/game.cljc", :line 13, :column 23, :end-line 13, :end-column 30, :private true}}, mark-touches {:protocol-inline nil, :meta {:file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljc/cljs_minesweeper/game.cljc", :line 129, :column 8, :end-line 129, :end-column 20, :private true, :arglists (quote ([idx item width height all]))}, :private true, :name cljs-minesweeper.game/mark-touches, :variadic false, :file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljc/cljs_minesweeper/game.cljc", :end-column 20, :method-params ([idx item width height all]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 129, :end-line 129, :max-fixed-arity 5, :fn-var true, :arglists (quote ([idx item width height all]))}, gen-squares {:protocol-inline nil, :meta {:file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljc/cljs_minesweeper/game.cljc", :line 138, :column 8, :end-line 138, :end-column 19, :private true, :arglists (quote ([width height mines]))}, :private true, :name cljs-minesweeper.game/gen-squares, :variadic false, :file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljc/cljs_minesweeper/game.cljc", :end-column 19, :method-params ([width height mines]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 138, :end-line 138, :max-fixed-arity 3, :fn-var true, :arglists (quote ([width height mines]))}, click {:protocol-inline nil, :meta {:file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljc/cljs_minesweeper/game.cljc", :line 93, :column 7, :end-line 93, :end-column 12, :arglists (quote ([{:keys [width height squares], :as board} x y])), :doc "marks a square as shown, if square is zero, marks the touching zeros and squares"}, :name cljs-minesweeper.game/click, :variadic false, :file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljc/cljs_minesweeper/game.cljc", :end-column 12, :method-params ([p__22871 x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 93, :end-line 93, :max-fixed-arity 3, :fn-var true, :arglists (quote ([{:keys [width height squares], :as board} x y])), :doc "marks a square as shown, if square is zero, marks the touching zeros and squares"}, square {:protocol-inline nil, :meta {:file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljc/cljs_minesweeper/game.cljc", :line 46, :column 8, :end-line 46, :end-column 14, :private true, :arglists (quote ([index width height mines]))}, :private true, :name cljs-minesweeper.game/square, :variadic false, :file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljc/cljs_minesweeper/game.cljc", :end-column 14, :method-params ([index width height mines]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 4, :fn-var true, :arglists (quote ([index width height mines]))}, get-index {:protocol-inline nil, :meta {:file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljc/cljs_minesweeper/game.cljc", :line 90, :column 8, :end-line 90, :end-column 17, :private true, :arglists (quote ([x y width]))}, :private true, :name cljs-minesweeper.game/get-index, :variadic false, :file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljc/cljs_minesweeper/game.cljc", :end-column 17, :method-params ([x y width]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 3, :fn-var true, :arglists (quote ([x y width]))}, draw-board {:protocol-inline nil, :meta {:file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljc/cljs_minesweeper/game.cljc", :line 153, :column 7, :end-line 153, :end-column 17, :arglists (quote ([board])), :doc "helper function to draw a board on the repl when developing"}, :name cljs-minesweeper.game/draw-board, :variadic false, :file "/Users/karl/Development/clojure/cljs-minesweeper/src/cljc/cljs_minesweeper/game.cljc", :end-column 17, :method-params ([board]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 153, :end-line 153, :max-fixed-arity 1, :fn-var true, :arglists (quote ([board])), :doc "helper function to draw a board on the repl when developing"}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:squares :SE :number :W :marked :width :SW :E :mines :NW :NE :S :N :height :show}, :order [:number :NW :N :NE :W :E :SW :S :SE :show :marked :width :height :squares :mines]}, :doc nil}